//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iMon.XBMC.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("127.0.0.1")]
        public string XbmcIp {
            get {
                return ((string)(this["XbmcIp"]));
            }
            set {
                this["XbmcIp"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8080")]
        public int XbmcPort {
            get {
                return ((int)(this["XbmcPort"]));
            }
            set {
                this["XbmcPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("xbmc")]
        public string XbmcUsername {
            get {
                return ((string)(this["XbmcUsername"]));
            }
            set {
                this["XbmcUsername"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string XbmcPassword {
            get {
                return ((string)(this["XbmcPassword"]));
            }
            set {
                this["XbmcPassword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool GeneralStartupAuto {
            get {
                return ((bool)(this["GeneralStartupAuto"]));
            }
            set {
                this["GeneralStartupAuto"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool GeneralStartupConnect {
            get {
                return ((bool)(this["GeneralStartupConnect"]));
            }
            set {
                this["GeneralStartupConnect"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GeneralTrayEnabled {
            get {
                return ((bool)(this["GeneralTrayEnabled"]));
            }
            set {
                this["GeneralTrayEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool GeneralTrayStartMinimized {
            get {
                return ((bool)(this["GeneralTrayStartMinimized"]));
            }
            set {
                this["GeneralTrayStartMinimized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int XbmcConnectionInterval {
            get {
                return ((int)(this["XbmcConnectionInterval"]));
            }
            set {
                this["XbmcConnectionInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GeneralTrayHideOnClose {
            get {
                return ((bool)(this["GeneralTrayHideOnClose"]));
            }
            set {
                this["GeneralTrayHideOnClose"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GeneralTrayHideOnMinimize {
            get {
                return ((bool)(this["GeneralTrayHideOnMinimize"]));
            }
            set {
                this["GeneralTrayHideOnMinimize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ImonAutoInitialize {
            get {
                return ((bool)(this["ImonAutoInitialize"]));
            }
            set {
                this["ImonAutoInitialize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ImonUninitializeOnError {
            get {
                return ((bool)(this["ImonUninitializeOnError"]));
            }
            set {
                this["ImonUninitializeOnError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XbmcIdleStaticTextEnable {
            get {
                return ((bool)(this["XbmcIdleStaticTextEnable"]));
            }
            set {
                this["XbmcIdleStaticTextEnable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("XBMC")]
        public string XbmcIdleStaticText {
            get {
                return ((string)(this["XbmcIdleStaticText"]));
            }
            set {
                this["XbmcIdleStaticText"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("500")]
        public int ImonLcdScrollingDelay {
            get {
                return ((int)(this["ImonLcdScrollingDelay"]));
            }
            set {
                this["ImonLcdScrollingDelay"] = value;
            }
        }
    }
}
